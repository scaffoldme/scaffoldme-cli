/**
 * @scaffoldme-microservices/projects-api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.17-alpha.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { NewProjectInfos } from '../models';
import { ProjectInfos } from '../models';
import { ProjectInfosWithRelations } from '../models';
/**
 * ProjectInfosControllerApi - axios parameter creator
 * @export
 */
export declare const ProjectInfosControllerApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {NewProjectInfos} [newProjectInfos]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    projectInfosControllerCreate(newProjectInfos?: NewProjectInfos | undefined, options?: any): RequestArgs;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    projectInfosControllerFind(id: string, options?: any): RequestArgs;
};
/**
 * ProjectInfosControllerApi - functional programming interface
 * @export
 */
export declare const ProjectInfosControllerApiFp: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {NewProjectInfos} [newProjectInfos]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    projectInfosControllerCreate(newProjectInfos?: NewProjectInfos | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<ProjectInfos>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    projectInfosControllerFind(id: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<ProjectInfosWithRelations[]>;
};
/**
 * ProjectInfosControllerApi - factory interface
 * @export
 */
export declare const ProjectInfosControllerApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     *
     * @param {NewProjectInfos} [newProjectInfos]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    projectInfosControllerCreate(newProjectInfos?: NewProjectInfos | undefined, options?: any): AxiosPromise<ProjectInfos>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    projectInfosControllerFind(id: string, options?: any): AxiosPromise<ProjectInfosWithRelations[]>;
};
/**
 * ProjectInfosControllerApi - object-oriented interface
 * @export
 * @class ProjectInfosControllerApi
 * @extends {BaseAPI}
 */
export declare class ProjectInfosControllerApi extends BaseAPI {
    /**
     *
     * @param {NewProjectInfos} [newProjectInfos]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectInfosControllerApi
     */
    projectInfosControllerCreate(newProjectInfos?: NewProjectInfos, options?: any): AxiosPromise<ProjectInfos>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProjectInfosControllerApi
     */
    projectInfosControllerFind(id: string, options?: any): AxiosPromise<ProjectInfosWithRelations[]>;
}
